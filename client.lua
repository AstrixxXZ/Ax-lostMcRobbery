local QBX = exports.qbx_core

-- –ì–ª–æ–±–∞–ª–Ω–∏ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∏
local vendorPed = nil
local truckEntity = nil
local truckCrew = {}
local bikerEntities = {}
local truckBlip = nil
local robberyInProgress = false
local truckLocked = true
local truckRobbed = false
local robberyCompleted = false

-- –§—É–Ω–∫—Ü–∏—è –∑–∞ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –º–æ–¥–µ–ª
local function LoadModel(model)
    local modelHash = GetHashKey(model)
    RequestModel(modelHash)
    while not HasModelLoaded(modelHash) do
        Wait(100)
    end
    return modelHash
end

-- –§—É–Ω–∫—Ü–∏—è –∑–∞ –ø–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ –º–µ–Ω—é (–ø—Ä–µ—Ä–∞–±–æ—Ç–µ–Ω–∞)
local function ShowInformationMenu()
    lib.registerContext({
        id = 'gunrob_info_main',
        title = 'üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –æ–±–∏—Ä–∏',
        menu = 'gunrob_vendor_menu',
        options = {
            {
                title = 'üéØ –ö–∞–∫ —Ä–∞–±–æ—Ç–∏ —Å–∏—Å—Ç–µ–º–∞—Ç–∞?',
                description = '–û—Å–Ω–æ–≤–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –æ–±–∏—Ä–∏—Ç–µ',
                icon = 'fa-solid fa-question-circle',
                onSelect = function()
                    lib.alertDialog({
                        header = 'üéØ –ö–∞–∫ —Ä–∞–±–æ—Ç–∏ —Å–∏—Å—Ç–µ–º–∞—Ç–∞?',
                        content = [[
**1Ô∏è‚É£ –°—Ç–∞—Ä—Ç–∏—Ä–∞–π –æ–±–∏—Ä**
–ü–ª–∞—Ç–∏ $]] .. Config.Prices.robbery .. [[ –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –≤—ä–æ—Ä—ä–∂–µ–Ω —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç

**2Ô∏è‚É£ –ù–∞–º–µ—Ä–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞**
–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç—ä—Ç —Å–µ —Å–ø–∞—É–Ω–≤–∞ —Å —á–µ—Ä–≤–µ–Ω –±–ª–∏–ø –Ω–∞ –∫–∞—Ä—Ç–∞—Ç–∞

**3Ô∏è‚É£ –í–∑–ª–æ–º–∏ –∑–∞–∫–ª—é—á–≤–∞–Ω–µ—Ç–æ**
–ò–∑–ø–æ–ª–∑–≤–∞–π lockpick –∑–∞ –¥–∞ –æ—Ç–∫–ª—é—á–∏—à –±—É—Å–∞

**4Ô∏è‚É£ –û–±–µ—Ä–∏ –±–∞–≥–∞–∂–Ω–∏–∫–∞**
–í–∑–µ–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∏—Ç–µ –æ—Ç –±–∞–≥–∞–∂–Ω–∏–∫–∞ –∑–∞ –¥–∞ –∑–∞–≤—ä—Ä—à–∏—à –æ–±–∏—Ä–∞

**‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ:**
–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç—ä—Ç –µ –æ—Ö—Ä–∞–Ω—è–≤–∞–Ω –æ—Ç –≤—ä–æ—Ä—ä–∂–µ–Ω–∏ —Ä–æ–∫–µ—Ä–∏!
                        ]],
                        centered = true,
                        cancel = true
                    })
                end
            },
            {
                title = '‚è∞ Cooldown –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                description = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –≤—Ä–µ–º–µ—Ç–æ –Ω–∞ –∏–∑—á–∞–∫–≤–∞–Ω–µ',
                icon = 'fa-solid fa-clock',
                onSelect = function()
                    lib.alertDialog({
                        header = '‚è∞ Cooldown –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                        content = [[
**üïê –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª–µ–Ω cooldown: 12 —á–∞—Å–∞**
–ò–≥—Ä–∞—á—ä—Ç –∫–æ–π—Ç–æ –∑–∞–≤—ä—Ä—à–∏ –æ–±–∏—Ä–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ –∏–∑—á–∞–∫–∞ 12 —á–∞—Å–∞

**üåç –ì–ª–æ–±–∞–ª–µ–Ω cooldown: 30 –º–∏–Ω—É—Ç–∏**
–í—Å–∏—á–∫–∏ –æ—Å—Ç–∞–Ω–∞–ª–∏ –∏–≥—Ä–∞—á–∏ –º–æ–≥–∞—Ç –¥–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞—Ç –æ–±–∏—Ä —Å–ª–µ–¥ 30 –º–∏–Ω—É—Ç–∏

**üí° –°—ä–≤–µ—Ç:**
–ú–æ–∂–µ—à –¥–∞ –∏–∑–ø–æ–ª–∑–≤–∞—à –ª–æ–∫–∞—Ç–æ—Ä –∑–∞ –¥–∞ –Ω–∞–º–µ—Ä–∏—à –∞–∫—Ç–∏–≤–µ–Ω —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∫–æ–π—Ç–æ –¥—Ä—É–≥ –∏–≥—Ä–∞—á –µ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–ª

**üìç GPS –õ–æ–∫–∞—Ç–æ—Ä:**
–ü–æ–∫–∞–∑–≤–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ—Ç–æ –Ω–∞ –∞–∫—Ç–∏–≤–µ–Ω —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç (–∞–∫–æ –∏–º–∞ —Ç–∞–∫—ä–≤)
                        ]],
                        centered = true,
                        cancel = true
                    })
                end
            },
            {
                title = '‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ —Å—ä–≤–µ—Ç–∏',
                description = '–í–∞–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç',
                icon = 'fa-solid fa-exclamation-triangle',
                onSelect = function()
                    lib.alertDialog({
                        header = '‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ —Å—ä–≤–µ—Ç–∏',
                        content = [[
**üî´ –í—ä–æ—Ä—ä–∂–µ–Ω–∞ –æ—Ö—Ä–∞–Ω–∞:**
–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç—ä—Ç –µ –æ—Ö—Ä–∞–Ω—è–≤–∞–Ω –æ—Ç –º–Ω–æ–≥–æ –¥–æ–±—Ä–µ –≤—ä–æ—Ä—ä–∂–µ–Ω–∏ —Ä–æ–∫–µ—Ä–∏ –Ω–∞ –º–æ—Ç–æ—Ä–∏!

**üöî –ü–æ–ª–∏—Ü–µ–π—Å–∫–∏ –∞–ª–µ—Ä—Ç:**
]] .. Config.PoliceChance .. [[% —à–∞–Ω—Å –ø–æ–ª–∏—Ü–∏—è—Ç–∞ –¥–∞ –±—ä–¥–µ —É–≤–µ–¥–æ–º–µ–Ω–∞ –ø—Ä–∏ –∑–∞–≤—ä—Ä—à–≤–∞–Ω–µ

**üîí –ò–∑–∏—Å–∫–≤–∞–Ω–∏—è:**
–¢—Ä—è–±–≤–∞ —Ç–∏ lockpick –∑–∞ –¥–∞ –≤–∑–ª–æ–º–∏—à —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞

**üíä –ü—Ä–µ–ø–æ—Ä—ä–∫–∏ –∑–∞ –µ–∫–∏–ø–∏—Ä–æ–≤–∫–∞:**
‚Ä¢ –ù–æ—Å–∏ –±—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç–∫–∏
‚Ä¢ –í–∑–µ–º–∏ –¥–æ—Å—Ç–∞—Ç—ä—á–Ω–æ –±–æ–µ–ø—Ä–∏–ø–∞—Å–∏
‚Ä¢ –ò–∑–ø–æ–ª–∑–≤–∞–π –¥–æ–±—Ä–∏ –æ—Ä—ä–∂–∏—è
‚Ä¢ –ò–≥—Ä–∞–π —Å –ø—Ä–∏—è—Ç–µ–ª–∏ –∑–∞ –ø–æ-–≥–æ–ª—è–º —à–∞–Ω—Å –∑–∞ —É—Å–ø–µ—Ö

**üéØ –°—Ç—Ä–∞—Ç–µ–≥–∏—è:**
–ï–ª–∏–º–∏–Ω–∏—Ä–∞–π –ø—ä—Ä–≤–æ –º–æ—Ç–æ—Ä–∏—Å—Ç–∏—Ç–µ, —Å–ª–µ–¥ —Ç–æ–≤–∞ –µ–∫–∏–ø–∞–∂–∞ –Ω–∞ –±—É—Å–∞
                        ]],
                        centered = true,
                        cancel = true
                    })
                end
            },
            {
                title = '‚óÄÔ∏è –ù–∞–∑–∞–¥',
                description = '–í—Ä—ä—â–∞–Ω–µ –∫—ä–º –≥–ª–∞–≤–Ω–æ—Ç–æ –º–µ–Ω—é',
                icon = 'fa-solid fa-arrow-left',
                onSelect = function()
                    lib.showContext('gunrob_vendor_menu')
                end
            }
        }
    })
    
    lib.showContext('gunrob_info_main')
end

-- –§—É–Ω–∫—Ü–∏—è –∑–∞ –ø–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ vendor –º–µ–Ω—é
local function ShowVendorMenu()
    lib.registerContext({
        id = 'gunrob_vendor_menu',
        title = 'üî´ –î–æ—Å—Ç–∞–≤—á–∏–∫ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
        options = {
            {
                title = 'üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                description = '–ù–∞—É—á–∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∏ —Å–∏—Å—Ç–µ–º–∞—Ç–∞ –∑–∞ –æ–±–∏—Ä–∏',
                icon = 'fa-solid fa-info-circle',
                onSelect = function()
                    ShowInformationMenu()
                end
            },
            {
                title = 'üí∞ –ö—É–ø–∏ –ª–æ–∫–∞—Ç–æ—Ä',
                description = '–ö—É–ø–∏ GPS –ª–æ–∫–∞—Ç–æ—Ä –∑–∞ $' .. Config.Prices.locator,
                icon = 'fa-solid fa-location-dot',
                onSelect = function()
                    lib.callback('ax-gunrob:server:buyLocator', false, function(success) end)
                end
            },
            {
                title = 'üíÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–π –æ–±–∏—Ä',
                description = '–ü–ª–∞—Ç–∏ $' .. Config.Prices.robbery .. ' –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –≤—ä–æ—Ä—ä–∂–µ–Ω —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
                icon = 'fa-solid fa-mask',
                onSelect = function()
                    lib.callback('ax-gunrob:server:startRobbery', false, function(result)
                        if not result.success then
                            lib.notify({
                                title = '–ì—Ä–µ—à–∫–∞',
                                description = result.message,
                                type = 'error'
                            })
                        end
                    end)
                end
            },
            {
                title = '‚ùå –ó–∞—Ç–≤–æ—Ä–∏',
                description = '–ó–∞—Ç–≤–æ—Ä–∏ –º–µ–Ω—é—Ç–æ',
                icon = 'fa-solid fa-times',
                onSelect = function()
                    lib.hideContext()
                end
            }
        }
    })
    
    lib.showContext('gunrob_vendor_menu')
end

-- –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ NPC vendor
local function CreateVendorPed()
    if vendorPed then return end
    
    local modelHash = LoadModel(Config.Vendor.model)
    vendorPed = CreatePed(4, modelHash, Config.Vendor.coords.x, Config.Vendor.coords.y, Config.Vendor.coords.z - 1.0, Config.Vendor.coords.w, false, true)
    
    SetEntityHeading(vendorPed, Config.Vendor.coords.w)
    FreezeEntityPosition(vendorPed, true)
    SetEntityInvincible(vendorPed, true)
    SetBlockingOfNonTemporaryEvents(vendorPed, true)
    
    -- –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ blip
    if Config.Vendor.blip then
        local blip = AddBlipForEntity(vendorPed)
        SetBlipSprite(blip, Config.Vendor.blip.sprite)
        SetBlipColour(blip, Config.Vendor.blip.color)
        SetBlipScale(blip, Config.Vendor.blip.scale)
        SetBlipAsShortRange(blip, true)
        BeginTextCommandSetBlipName("STRING")
        AddTextComponentString(Config.Vendor.blip.label)
        EndTextCommandSetBlipName(blip)
    end
    
    -- ox_target –æ–ø—Ü–∏–∏ –∑–∞ vendor - –æ—Ç–≤–∞—Ä—è ox_lib –º–µ–Ω—é
    exports.ox_target:addLocalEntity(vendorPed, {
        {
            name = 'talk_to_vendor',
            icon = 'fas fa-comments',
            label = '–†–∞–∑–≥–æ–≤–∞—Ä—è–π —Å –¥–æ—Å—Ç–∞–≤—á–∏–∫–∞',
            onSelect = function()
                ShowVendorMenu()
            end
        }
    })
    
    print('[ax-gunrob] Vendor NPC –µ —É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–¥–µ–Ω!')
end

-- –°–ø–∞—É–≤–∞–Ω–µ –Ω–∞ –±—É—Å
RegisterNetEvent('ax-gunrob:client:spawnTruck', function()
    print('[ax-gunrob] –°–ø–∞—É–Ω–≤–∞–Ω–µ –Ω–∞ –∫–∞–º–∏–æ–Ω–∞...')
    
    CleanupTruckEntities()
    Wait(1000)
    
    local modelHash = LoadModel(Config.Truck.model)
    truckEntity = CreateVehicle(modelHash, Config.Truck.spawnCoords.x, Config.Truck.spawnCoords.y, Config.Truck.spawnCoords.z, Config.Truck.spawnCoords.w, true, false)
    
    if not DoesEntityExist(truckEntity) then
        print('[ax-gunrob] –ù–µ—É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∫–∞–º–∏–æ–Ω–∞!')
        return
    end
    
    SetVehicleEngineOn(truckEntity, true, true, false)
    SetVehicleDoorsLocked(truckEntity, 2)
    SetEntityAsMissionEntity(truckEntity, true, true)
    
    SpawnTruckCrew()
    SpawnBikers()
    
    -- –î–≤–∏–∂–µ–Ω–∏–µ –Ω–∞ –±—É—Å–∞
    if Config.Truck.shouldMove and truckCrew.driver then
        TaskVehicleDriveWander(truckCrew.driver, truckEntity, Config.Truck.speed, Config.Truck.drivingStyle)
    end
    
    -- –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ blip - –ø–æ–ø—Ä–∞–≤–µ–Ω–æ
    Wait(1000) -- –ò–∑—á–∞–∫–≤–∞–º–µ –±—É—Å–∞ –¥–∞ —Å–µ —Å—ä–∑–¥–∞–¥–µ –Ω–∞–ø—ä–ª–Ω–æ
    
    if DoesEntityExist(truckEntity) then
        truckBlip = AddBlipForEntity(truckEntity)
        if truckBlip then
            SetBlipSprite(truckBlip, Config.Truck.blip.sprite or 477)
            SetBlipColour(truckBlip, Config.Truck.blip.color or 1)
            SetBlipScale(truckBlip, Config.Truck.blip.scale or 0.8)
            SetBlipAsShortRange(truckBlip, false)
            BeginTextCommandSetBlipName("STRING")
            AddTextComponentString(Config.Truck.blip.label or "Truck Robbery")
            EndTextCommandSetBlipName(truckBlip)
            
            if Config.Debug then
                print('[ax-gunrob] –ë–ª–∏–ø–∞ –Ω–∞ –∫–∞–º–∏–æ–Ω–∞ –µ —É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–¥–µ–Ω ID: ' .. truckBlip)
            end
        else
            print('[ax-gunrob] –ù–µ—É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –±–ª–∏–ø –∑–∞ –∫–∞–º–∏–æ–Ω–∞')
        end
    else
        print('[ax-gunrob] –ù–µ—É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∫–∞–º–∏–æ–Ω–∞')
    end

    -- ox_target
    exports.ox_target:addLocalEntity(truckEntity, {
        {
            name = 'lockpick_truck',
            icon = 'fas fa-key',
            label = '–í–∑–ª–æ–º–∏ –∑–∞–∫–ª—é—á–≤–∞–Ω–µ—Ç–æ',
            distance = 3.0,
            onSelect = function() LockpickTruck() end,
            canInteract = function() return truckLocked and not robberyInProgress and not robberyCompleted end
        },
        {
            name = 'rob_truck',
            icon = 'fas fa-hand-holding-usd',
            label = '–û–±–µ—Ä–∏ –±–∞–≥–∞–∂–Ω–∏–∫–∞',
            distance = 3.0,
            onSelect = function() RobTruck() end,
            canInteract = function() return not truckLocked and not robberyInProgress and not truckRobbed and not robberyCompleted end
        },
        {
            name = 'open_trunk',
            icon = 'fas fa-box-open',
            label = '–û—Ç–≤–æ—Ä–∏ –±–∞–≥–∞–∂–Ω–∏–∫–∞',
            distance = 3.0,
            onSelect = function() OpenTruckInventory() end,
            canInteract = function() return not truckLocked and not robberyInProgress and truckRobbed and not robberyCompleted end
        }
    })
    
    lib.notify({
        title = '–†–æ–∫–µ—Ä–∏ –ø—Ä–µ–Ω–∞—Å—è—Ç –æ—Ä—ä–∂–∏—è',
        description = '–ü—Ä–µ–Ω–æ—Å –Ω–∞ –æ—Ä—ä–∂–∏—è –ø–æ—Ç–µ–≥–ª–∏!!!',
        type = 'success'
    })
    
    print('[ax-gunrob] –ë—É—Å–∞ –µ —É—Å–ø–µ—à–Ω–æ —Å–ø–∞—É–Ω–∞—Ç!')
end)

-- –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å–ø–∞—É–≤–∞–Ω–µ –Ω–∞ –µ–∫–∏–ø–∞–∂–∞
function SpawnTruckCrew()
    truckCrew = {}
    
    local driverHash = LoadModel(Config.Truck.crew.driver.model)
    truckCrew.driver = CreatePedInsideVehicle(truckEntity, 26, driverHash, -1, true, false)
    
    if DoesEntityExist(truckCrew.driver) then
        SetupCrewMember(truckCrew.driver, Config.Truck.crew.driver)
    end
    
    local passengerHash = LoadModel(Config.Truck.crew.passenger.model)
    truckCrew.passenger = CreatePedInsideVehicle(truckEntity, 26, passengerHash, 0, true, false)
    
    if DoesEntityExist(truckCrew.passenger) then
        SetupCrewMember(truckCrew.passenger, Config.Truck.crew.passenger)
    end
end

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ —á–ª–µ–Ω –æ—Ç –µ–∫–∏–ø–∞–∂–∞
function SetupCrewMember(ped, config)
    SetEntityAsMissionEntity(ped, true, true)
    SetPedFleeAttributes(ped, 0, 0)
    SetPedCombatAttributes(ped, 46, 1)
    SetPedAccuracy(ped, config.accuracy)
    SetEntityMaxHealth(ped, config.health)
    SetEntityHealth(ped, config.health)
    GiveWeaponToPed(ped, GetHashKey(config.weapon), 250, false, true)
    SetPedRelationshipGroupHash(ped, GetHashKey('HATES_PLAYER'))
end

-- –§—É–Ω–∫—Ü–∏—è –∑–∞ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è
local function LoadAnimDict(dict)
    RequestAnimDict(dict)
    while not HasAnimDictLoaded(dict) do
        Wait(10)
    end
end

-- –í–∑–ª–æ–º—è–≤–∞–Ω–µ –Ω–∞ –±—É—Å–∞
function LockpickTruck()
    if robberyInProgress or not truckLocked then return end
    
    exports['ps-dispatch']:VanRobbery()
    robberyInProgress = true
    
    -- –ó–∞—Ä–µ–∂–¥–∞–º–µ –∏ –∏–≥—Ä–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—è—Ç–∞ (—Å –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –Ω–∞–ª–∏—á–∏–µ)
    local playerPed = PlayerPedId()
    if Config.Lockpick and Config.Lockpick.animation then
        LoadAnimDict(Config.Lockpick.animation.dict)
        TaskPlayAnim(playerPed, Config.Lockpick.animation.dict, Config.Lockpick.animation.name, 8.0, -8.0, -1, Config.Lockpick.animation.flag, 0, false, false, false)
    end
    
    local success = exports.bl_ui:MineSweeper(3, {
        grid = 6, -- grid 6x6
        duration = 10000, -- 10sec to fail
        target = 5, --target you need to remember
        previewDuration = 2000 --preview duration (time for red mines preview to hide)
    })
    
    -- –°–ø–∏—Ä–∞–º–µ –∞–Ω–∏–º–∞—Ü–∏—è—Ç–∞
    ClearPedTasks(playerPed)
    
    if success then
        truckLocked = false
        SetVehicleDoorsLocked(truckEntity, 1)
        SetVehicleDoorOpen(truckEntity, 5, false, false) -- –ë–∞–≥–∞–∂–Ω–∏–∫
        
        lib.notify({
            title = '–£—Å–ø–µ—à–Ω–æ –≤–∑–ª–æ–º—è–≤–∞–Ω–µ',
            description = '–ë—É—Å–∞ –µ –æ—Ç–∫–ª—é—á–µ–Ω!',
            type = 'success'
        })
    else
        if Config.Lockpick.removeOnFail then
            TriggerServerEvent('ax-gunrob:server:removeLockpick')
        end
        
        lib.notify({
            title = '–ù–µ—É—Å–ø–µ—à–Ω–æ –≤–∑–ª–æ–º—è–≤–∞–Ω–µ',
            description = 'Lockpick-—ä—Ç —Å–µ —Å—á—É–ø–∏!',
            type = 'error'
        })
    end
    
    robberyInProgress = false
end

-- –û–±–∏—Ä–∞–Ω–µ –Ω–∞ –±—É—Å–∞
function RobTruck()
    if robberyInProgress or truckLocked or truckRobbed then return end
    
    robberyInProgress = true
    
    -- –ó–∞—Ä–µ–∂–¥–∞–º–µ –∏ –∏–≥—Ä–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—è—Ç–∞ –∑–∞ –æ–±–∏—Ä–∞–Ω–µ
    local playerPed = PlayerPedId()
    if Config.ProgressBar and Config.ProgressBar.robbery and Config.ProgressBar.robbery.animation then
        LoadAnimDict(Config.ProgressBar.robbery.animation.dict)
        TaskPlayAnim(playerPed, Config.ProgressBar.robbery.animation.dict, Config.ProgressBar.robbery.animation.name, 8.0, -8.0, -1, 1, 0, false, false, false)
    end
    
    local success = lib.progressBar({
        duration = Config.ProgressBar.robbery.duration,
        label = Config.ProgressBar.robbery.label,
        useWhileDead = false,
        canCancel = true,
        disable = { move = true, car = true, combat = true }
    })
    
    -- –°–ø–∏—Ä–∞–º–µ –∞–Ω–∏–º–∞—Ü–∏—è—Ç–∞
    ClearPedTasks(playerPed)
    
    if success then
        truckRobbed = true
        local netId = NetworkGetNetworkIdFromEntity(truckEntity)
        TriggerServerEvent('ax-gunrob:server:createTruckInventory', netId)
        TriggerServerEvent('ax-gunrob:server:completeRobbery')
        
        lib.notify({
            title = '–û–±–∏—Ä –∑–∞–≤—ä—Ä—à–µ–Ω',
            description = '–ú–æ–∂–µ—Ç–µ –¥–∞ –æ—Ç–≤–æ—Ä–∏—Ç–µ –±–∞–≥–∞–∂–Ω–∏–∫–∞!',
            type = 'success'
        })
    end
    
    robberyInProgress = false
end

-- –û—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
function OpenTruckInventory()
    if not truckEntity or robberyInProgress or robberyCompleted then return end
    
    local netId = NetworkGetNetworkIdFromEntity(truckEntity)
    
    lib.callback('ax-gunrob:server:openTruckInventory', false, function(inventoryId)
        if inventoryId then
            exports.ox_inventory:openInventory('stash', inventoryId)
            
            lib.notify({
                title = '–ë–∞–≥–∞–∂–Ω–∏–∫ –æ—Ç–≤–æ—Ä–µ–Ω',
                description = '–í–∑–µ–º–µ—Ç–µ –ø—Ä–µ–¥–º–µ—Ç–∏—Ç–µ –æ—Ç –±–∞–≥–∞–∂–Ω–∏–∫–∞. –û–±–∏—Ä—ä—Ç —â–µ —Å–µ –∑–∞–≤—ä—Ä—à–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–æ–≥–∞—Ç–æ –≤–∑–µ–º–µ—Ç–µ item.',
                type = 'inform',
                duration = 5000
            })
            
            -- –û–ø—Ä–æ—Å—Ç–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ - –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ —É–≤–µ–¥–æ–º—è–≤–∞–º–µ —Å—ä—Ä–≤—ä—Ä–∞
            CreateThread(function()
                local checkCount = 0
                
                while checkCount < 30 and not robberyCompleted do -- 30 —Å–µ–∫—É–Ω–¥–∏ –º–∞–∫—Å–∏–º—É–º
                    Wait(2000) -- –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –Ω–∞ –≤—Å–µ–∫–∏ 2 —Å–µ–∫—É–Ω–¥–∏
                    checkCount = checkCount + 1
                    
                    if not robberyCompleted then
                        if Config.Debug then
                            print('[ax-gunrob] –ü–µ—Ä–∏–æ–¥–∏—á–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ - sending item taken event')
                        end
                        
                        -- –£–≤–µ–¥–æ–º—è–≤–∞–º–µ —Å—ä—Ä–≤—ä—Ä–∞ —á–µ –º–æ–∂–µ –¥–∞ –µ –≤–∑–µ—Ç item
                        TriggerServerEvent('ax-gunrob:server:playerTookItem', inventoryId, 'check', 1)
                    end
                end
            end)
        else
            lib.notify({
                title = '–ì—Ä–µ—à–∫–∞',
                description = '–ù–µ –º–æ–∂–µ –¥–∞ —Å–µ –æ—Ç–≤–æ—Ä–∏ –±–∞–≥–∞–∂–Ω–∏–∫—ä—Ç',
                type = 'error'
            })
        end
    end, netId)
end

-- –°–ø–∞—É–≤–∞–Ω–µ –Ω–∞ –º–æ—Ç–æ—Ä–∏
function SpawnBikers()
    bikerEntities = {}
    local truckCoords = GetEntityCoords(truckEntity)
    
    for i = 1, Config.Truck.bikers.count do
        local bikeModel = Config.Truck.bikers.bikes[math.random(#Config.Truck.bikers.bikes)]
        local riderModel = Config.Truck.bikers.riders.models[math.random(#Config.Truck.bikers.riders.models)]
        local weapon = Config.Truck.bikers.riders.weapons[i] or 'WEAPON_PISTOL'
        
        local bikeHash = LoadModel(bikeModel)
        local riderHash = LoadModel(riderModel)
        
        local offset = Config.Truck.bikers.positions[i] or vector3(math.random(-10, 10), math.random(5, 15), 0.0)
        local bikeCoords = truckCoords + offset
        
        local bike = CreateVehicle(bikeHash, bikeCoords.x, bikeCoords.y, bikeCoords.z, 0.0, true, false)
        
        if DoesEntityExist(bike) then
            local rider = CreatePedInsideVehicle(bike, 26, riderHash, -1, true, false)
            
            if DoesEntityExist(rider) then
                SetEntityAsMissionEntity(bike, true, true)
                SetEntityAsMissionEntity(rider, true, true)
                SetPedAccuracy(rider, Config.Truck.bikers.riders.accuracy)
                SetEntityMaxHealth(rider, Config.Truck.bikers.riders.health)
                SetEntityHealth(rider, Config.Truck.bikers.riders.health)
                GiveWeaponToPed(rider, GetHashKey(weapon), 250, false, true)
                SetPedRelationshipGroupHash(rider, GetHashKey('HATES_PLAYER'))
                
                TaskVehicleEscort(rider, bike, truckEntity, -1, 15.0, 786603, 8.0 + i * 2.0, 0, 15.0)
                
                table.insert(bikerEntities, {bike = bike, rider = rider})
            else
                DeleteEntity(bike)
            end
        end
        
        Wait(100)
    end
end

-- –ó–∞–≤—ä—Ä—à–≤–∞–Ω–µ –Ω–∞ –æ–±–∏—Ä–∞
RegisterNetEvent('ax-gunrob:client:robberyCompleted', function()
    robberyCompleted = true
    
    -- –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ –≤—Å–∏—á–∫–∏ ox_target –æ–ø—Ü–∏–∏ –≤–µ–¥–Ω–∞–≥–∞
    if truckEntity then
        exports.ox_target:removeLocalEntity(truckEntity, {'lockpick_truck', 'rob_truck', 'open_trunk'})
        
        -- –î–æ–±–∞–≤—è–º–µ —Å–∞–º–æ –æ–ø—Ü–∏—è –∑–∞ –ø—Ä–µ–≥–ª–µ–¥ (–±–µ–∑ –≤—ä–∑–º–æ–∂–Ω–æ—Å—Ç –∑–∞ –æ—Ç–≤–∞—Ä—è–Ω–µ)
        exports.ox_target:addLocalEntity(truckEntity, {
            {
                name = 'truck_robbed',
                icon = 'fas fa-check-circle',
                label = '–û–±–∏—Ä—ä—Ç –µ –∑–∞–≤—ä—Ä—à–µ–Ω',
                distance = 3.0,
                onSelect = function() 
                    lib.notify({
                        title = '–û–±–∏—Ä –∑–∞–≤—ä—Ä—à–µ–Ω',
                        description = '–¢–æ–∑–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –µ –≤–µ—á–µ –æ–±—Ä–∞–Ω –Ω–∞–ø—ä–ª–Ω–æ.',
                        type = 'inform'
                    })
                end
            }
        })
    end
    
    lib.notify({
        title = 'üéâ –ú–ò–°–ò–Ø –ó–ê–í–™–†–®–ï–ù–ê! üéâ',
        description = '–û–±—Ä–∞—Ö—Ç–µ –≤—ä–æ—Ä—ä–∂–µ–Ω–∏—è—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç! Cooldown –µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω. –ë—É—Å–∞ —â–µ –∏–∑—á–µ–∑–Ω–µ —Å–∫–æ—Ä–æ.',
        type = 'success',
        duration = 8000
    })
    
    -- –ò–∑—á–∞–∫–≤–∞–º–µ 30 —Å–µ–∫—É–Ω–¥–∏ –∏ –∏–∑—á–∏—Å—Ç–≤–∞–º–µ –≤—Å–∏—á–∫–æ
    SetTimeout(30000, function()
        CleanupTruckEntities()
    end)
end)

-- –ò–∑—á–∏—Å—Ç–≤–∞–Ω–µ
function CleanupTruckEntities()
    if truckBlip and DoesBlipExist(truckBlip) then
        RemoveBlip(truckBlip)
        truckBlip = nil
    end
    
    if truckEntity then
        local netId = NetworkGetNetworkIdFromEntity(truckEntity)
        TriggerServerEvent('ax-gunrob:server:cleanupInventory', netId)
        
        exports.ox_target:removeLocalEntity(truckEntity, {'lockpick_truck', 'rob_truck', 'open_trunk', 'truck_robbed'})
        DeleteEntity(truckEntity)
        truckEntity = nil
    end
    
    for _, member in pairs(truckCrew) do
        if DoesEntityExist(member) then
            DeleteEntity(member)
        end
    end
    truckCrew = {}
    
    for _, biker in pairs(bikerEntities) do
        if DoesEntityExist(biker.rider) then DeleteEntity(biker.rider) end
        if DoesEntityExist(biker.bike) then DeleteEntity(biker.bike) end
    end
    bikerEntities = {}
    
    truckRobbed = false
    robberyCompleted = false
    truckLocked = true
end

-- –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –ª–æ–∫–∞—Ü–∏—è—Ç–∞
RegisterNetEvent('ax-gunrob:client:showTruckLocation', function()
    if truckEntity and DoesEntityExist(truckEntity) then
        local coords = GetEntityCoords(truckEntity)
        SetNewWaypoint(coords.x, coords.y)
        
        lib.notify({
            title = '–õ–æ–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω',
            description = '–õ–æ–∫–∞—Ü–∏—è—Ç–∞ –µ –º–∞—Ä–∫–∏—Ä–∞–Ω–∞ –Ω–∞ –∫–∞—Ä—Ç–∞—Ç–∞',
            type = 'success'
        })
    end
end)

-- Callback –∑–∞ –≤–∞–ª–∏–¥–∏—Ä–∞–Ω–µ –Ω–∞ —Å–ø–∞—É–≤–∞–Ω–µ –Ω–∞ truck
lib.callback.register('ax-gunrob:client:validateTruckExists', function()
    if truckEntity and DoesEntityExist(truckEntity) then
        local netId = NetworkGetNetworkIdFromEntity(truckEntity)
        if Config.Debug then
            print('[ax-gunrob] Truck validation - exists: true, NetId: ' .. netId)
        end
        return true, netId
    else
        if Config.Debug then
            print('[ax-gunrob] Truck validation - exists: false')
        end
        return false, nil
    end
end)

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
CreateThread(function()
    Wait(2000)
    CreateVendorPed()
end)

print('[ax-gunrob] –ö–ª–∏–µ–Ω—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–¥–µ–Ω!')
-- –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —Å—ä–±–∏—Ç–∏—è